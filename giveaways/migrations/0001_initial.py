# Generated by Django 3.2.5 on 2022-03-08 10:01

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import django_quill.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Giveaway',
            fields=[
                ('giveaway_id', models.AutoField(primary_key=True, serialize=False)),
                ('giveaway_title', models.CharField(blank=True, max_length=200, null=True)),
                ('giveaway_desc', django_quill.fields.QuillField()),
                ('last_apply_date', models.DateTimeField(blank=True, null=True)),
                ('result_announcement_date', models.DateTimeField(null=True)),
                ('result_announced', models.BooleanField(default=False)),
                ('total_winners', models.IntegerField()),
                ('redirect_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GiveawayCategory',
            fields=[
                ('gawy_cat_id', models.AutoField(primary_key=True, serialize=False)),
                ('cat_name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email_id', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{8,15}$')])),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='giveaway/profiles')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('address', models.TextField(blank='False', null='False')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GiveawayRegistration',
            fields=[
                ('reg_id', models.AutoField(primary_key=True, serialize=False)),
                ('winner', models.BooleanField(blank='False', default=False, null='False')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('giveaway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giveaways.giveaway')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giveaways.player')),
            ],
        ),
        migrations.AddField(
            model_name='giveaway',
            name='giveaway_cat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giveaways.giveawaycategory'),
        ),
        migrations.CreateModel(
            name='Winners',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('giveaway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giveaways.giveaway')),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giveaways.player')),
            ],
            options={
                'unique_together': {('giveaway', 'winner')},
            },
        ),
    ]
